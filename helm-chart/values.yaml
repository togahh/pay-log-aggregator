# Global configuration that can be overridden
global:
  team: "platform"
  defaultImageName: "pay-log-aggregator"
  defaultTag: "latest"
  
  image:
    registry: ""
    repository: "pay-log-aggregator"
    tag: "latest"
    pullPolicy: "IfNotPresent"
  
  # Environment variables
  environment:
    ELASTICSEARCH_HOST: "elasticsearch"
    ELASTICSEARCH_PORT: "9200"
    ELASTICSEARCH_INDEX_PREFIX: "pay-logs"
    BATCH_SIZE: "100"
    SEARCH_TIMEOUT: "30s"
    MAX_SEARCH_RESULTS: "1000"
    RETENTION_DAYS: "90"
    COMPRESSION_ENABLED: "true"
  
  # Global configurations
  configurations:
    enabled: false
    values: {}

# Deployment configuration
deployment:
  enabled: true
  
  # Image configuration
  image:
    name: "pay-log-aggregator"
    tag: ""  # Will use global.defaultTag if not specified
    
  # Container port configuration
  containerPort: 8000
  
  # Additional ports for monitoring
  extraContainerPorts:
    - name: metrics
      port: 9090
      protocol: TCP
  
  # Service account for IAM permissions
  createServiceAccount: true
  serviceAccountAnnotations: {}

  # Deployment annotations for Prometheus scraping
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"

  # Resource configuration
  resources:
    limits:
      memory: "512Mi"
      cpu: "500m"
    requests:
      memory: "256Mi"
      cpu: "200m"

  # Autoscaling configuration (HPA)
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        policies:
          - type: Percent
            value: 100
            periodSeconds: 15
      scaleDown:
        stabilizationWindowSeconds: 300
        policies:
          - type: Percent
            value: 50
            periodSeconds: 60
  
  # Deployment strategy
  deploymentStrategy:
    type: "RollingUpdate"
    maxSurge: 50%
    maxUnavailable: 25%
  
  # Health check configuration
  livenessProbe:
    enabled: true
    timeoutSeconds: 5
    periodSeconds: 10
    httpGet:
      path: "/health"
      
  readinessProbe:
    enabled: true
    timeoutSeconds: 5
    periodSeconds: 10
    httpGet:
      path: "/health"
      
  startupProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 10
    httpGet:
      path: "/health"
      
  # Pre-stop hook configuration
  preStopHook:
    enabled: true
    preStopSeconds: 10

# Service Account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Service configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  annotations: {}
  
# Ingress configuration
ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  hosts:
    - host: pay-log-aggregator.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# ConfigMap configuration
configMap:
  enabled: true
  data:
    elasticsearch.yaml: |
      host: elasticsearch
      port: 9200
      index_prefix: pay-logs

# PodDisruptionBudget configuration
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network Policy configuration
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              access: pay-log-aggregator
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 9200  # Elasticsearch
        - protocol: UDP
          port: 53    # DNS

# RBAC configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["configmaps", "secrets"]
      verbs: ["get", "list"]
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "list", "watch"]

# Security configuration
security:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

# Pod Security Context
podSecurityContext:
  fsGroup: 1000

# External Elasticsearch configuration
elasticsearch:
  enabled: true
  host: "elasticsearch"
  port: 9200
  credentials:
    username: ""
    password: ""
    existingSecret: ""

# Prometheus monitoring
prometheus:
  enabled: true
  port: 9090
  path: "/metrics"
  interval: "30s"

# Monitoring configuration
monitoring:
  serviceMonitor:
    enabled: true
    namespace: ""
    interval: "30s"
    scrapeTimeout: "10s"
    path: "/metrics"
    labels: {}
    annotations: {}
    metricRelabelings: []
    relabelings: []