1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "pay-log-aggregator.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "pay-log-aggregator.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "pay-log-aggregator.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "pay-log-aggregator.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the health of your application:
  kubectl get pods -l "app.kubernetes.io/name={{ include "pay-log-aggregator.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -n {{ .Release.Namespace }}

3. View application logs:
  kubectl logs -f deployment/{{ include "pay-log-aggregator.fullname" . }} -n {{ .Release.Namespace }}

4. Check HPA status:
  kubectl get hpa {{ include "pay-log-aggregator.fullname" . }} -n {{ .Release.Namespace }}

{{- if .Values.prometheus.enabled }}
5. Monitor metrics (if Prometheus is configured):
  kubectl port-forward svc/{{ include "pay-log-aggregator.fullname" . }} {{ .Values.prometheus.port }}:{{ .Values.prometheus.port }} -n {{ .Release.Namespace }}
  # Then visit http://localhost:{{ .Values.prometheus.port }}/metrics
{{- end }}

6. Test log ingestion:
  curl -X POST "http://localhost:8080/logs/ingest" \
    -H "Content-Type: application/json" \
    -d '{
      "level": "INFO",
      "message": "Test log message",
      "source": "helm-test",
      "timestamp": "2025-01-01T12:00:00Z"
    }'

7. Search logs:
  curl -X POST "http://localhost:8080/logs/search" \
    -H "Content-Type: application/json" \
    -d '{
      "query": "test",
      "limit": 10
    }'

8. Run Helm tests:
  helm test {{ .Release.Name }} -n {{ .Release.Namespace }}